Supplicant开发文档
===============================================================================
结构；
以太网帧接收和发送；
软件在线升级
TODO
Changes


结构：
===============================================================================
整个程序由一个用户界面程序和一个DLL程序组成：

1. Supplicant：一个MFC Dialog工程，是客户端软件的界面，用户逻辑等内容；其中主要
	成员有：
	a) LoginDlg：软件刚启动显示的那个登陆对话框，是程序的主窗口，除了处理登陆对
		话框的动作，还处理了托盘图标事件响应，以及托盘图标菜单的响应。
	
	b) PropertiesDlg：是进行用户设置的那个对话框，里面包含了四个属性页，即：
		CommonPropertyPage;
		RunningPropertyPage;
		ExtendedPropertyPage;
		NetworkPropertyPage;
		每个属性页的用户操作响应都在响应的PropertyPage类中，并最终都落实到注册表
		中。这样使用这些设置时直接从注册表读取。
		
	c) ConnectionDlg：是在双击TrayIcon后出现的对话框，用来显示当前连接的信息，包
		扩流量统计，连接时长等。

	d) ConnectingDlg：在用户选择“连接”命令后出现的显示登陆进度的小对话框。
		
	e) CDownloadProgressDlg：用来在做在线升级时显示软件下载进度的对话框。
	
	f) CTrayIcon：用来封装对于托盘图标的操作，包括设置图标，设置文字提示，设置自
		定义消息等。
		
	g) eap_evt_handler：这是一个单独的函数，用户界面调用EAP.DLL中的Login时传递给
		EAP.DLL这个函数的指针，以后EAP.DLL中发生某些事件时会调用这个函数。
	

2. EAP：一个MFC DLL工程，封装了进行802.1X认证的多个函数，并且包含一个以太网帧监听
	线程，用来	完成和交换机的认证交互过程，并根据交互结果触发用户界面的动作。主要
	的成员有：
	a) etherlink：封装了收发以太网帧的操作，以及获取MAC地址的操作。
	
	b) eap：封装利用EAP包进行802.1X认证的框架逻辑。
	
	c) type_XXX：包括type_identity, type_md5, type_notification, type_tls四个类型，
		继承了eap::handler，是对某个EAP包做响应的处理模块。
		
		type_identity：	是对 Identity Request 包的响应处理，它构造Identity Response
						并发给交换机；
						
		type_md5：		是对MD5-Challenge的响应处理，它构造MD5-Response并发送之；
		
		type_notification：对Notification的响应处理；
		
	d) 	eapol：封装EAPOL包类型及其处理，即EAPOL-START和EAPOL-LOGOFF。

	e) EapProcess：封装了启动，停止EAP认证过程的函数。


以太网帧接收和发送；
===============================================================================
802.1X认证采用以太网扩展认证协议(EAPOL)，在以太网帧中填入认证信息进行认证。
Win32平台下，为了能够在以太网层面接收、发送数据，我们采用WinPcap来进行以太网层操
作。



软件在线升级实现方式
===============================================================================
软件在线升级指当服务器上有新的软件版本可用时，自动提示用户并下载进行软件升级。
目前的实现采用HTTP方式进行。

实现方式：
客户端软件中记录一个URL，每次软件启动，建立连接后，都自动访问这个URL，并以软件当前
版本为参数。例如当前版本为1.0，则软件会请求类似这样的URL:
http://update.xxx.com/update.asp?AppName=supplicant&Version=1.0

服务器端的脚本根据客户端传来的版本，查看是否有更新的软件版本。如果有，返回最新版本
软件的下载地址；如果没有，返回"UP TO DATE"

客户端收到服务器端的响应后，检查响应。如果发现有URL，则下载这个URL。


用户修改MAC地址的防止
===============================================================================
1. 用户修改MAC地址主要通过在注册表中网络接口配置中添加NetworkAddress项目，并在其中
指定用户想要修改的MAC地址。

2. 对与用户在注册表中设定的MAC地址，通过下面的流程来禁止：
	a) 安装程序在安装结束后，调用“supplicant CleanReg”来清除注册表中的用户MAC地址；
	b) 安装程序将supplicant置为自动执行，并提示用户重新启动；
	c) 重新启动后，supplicant自动运行，获取所有的MAC地址，并保存到一个不易发现的注册表分支中；
	d) supplicant运行时，确认以下两条必须成立，才运行：
		i)		注册表中没有用户MAC地址；
		ii)		当前获得的MAC地址是保存下来的MAC地址之一
		

TODO:
===============================================================================
真实MAC地址获取
连接状态对话框中连接速度的显示
软件自动升级(调试)
帮助文件
开发文档

Changes
===============================================================================
2004-07-11	添加对话框数据类型检查

2004-08-28  	添加MD5算法，去掉对openssl的依赖，以便减小文件大小
		添加自动升级时间检测的功能


