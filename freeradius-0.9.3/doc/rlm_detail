
	Detail module configuration


0. INTRODUCTION

  Most administrators use the detail accounting files that are created
  in some way.  However, with the other logging options available to
  FreeRADIUS there will undoubtably be those that want to disable this
  feature.  The detail file generation is handled within the rlm_detail
  module.

  The other concern most administrators have is rotating this file on a
  regular basis (daily, monthly, etc.).  Often this is done by some
  external program.  Why not have the RADIUS daemon do this automatically?
  With all of the information available to the daemon we can easily have
  it generate detail files with variable file names.

1. USAGE.

  To use this module add the detail configuration stanza to the
  modules section in radiusd.conf.

  For example:
	modules {
		...
		detail {
		   detailfile = %A/%{Client-IP-Address}/detail-%Y%m
		   detailperm = 0600
		   dirperm = 0755
		   locking = no
		}
		...
	}

  If you omit the detailfile option the server will automatically set
  it to:

       %{radacctdir}/%{Client-IP-Address}/detail

  which expands to {radius accounting directory}/{nas IP address}/detail.
  This is the traditional place for the RADIUS daemons to generate the
  file.  See 'variables.txt' for a more complete description of the
  variables available for use.

  Another option here is detailperm.  This allows you to configure the
  file permissions of the detailfile.  If omitted the default is 0600.

  You can also use the dirperm option to specify the permissions of the
  directories created by the daemon when logging.

  Setting locking to yes will enable filelocking of the detail file, this
  is mostly useful in combination with the radrelay program included with
  FreeRADIUS.

  Some of these are more useful then others, but all are available.  You
  can even have one detail file per Username.

2. IMPLEMENTATION

  The rlm_detail module only deals with accounting to a detail file.  The
  module will automatically create the required directories if they don't
  already exist.

  The expansion works by expanding the variables every time an accounting
  packet is to be written.  The variables are expanded to include the
  information available to the server at the time.
